package unimodel.constraints;

/*Generated by MPS */

import jetbrains.mps.core.aspects.constraints.rules.BaseRulesConstraintsDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.constraints.rules.Rule;
import jetbrains.mps.core.aspects.constraints.rules.kinds.ContainmentContext;
import java.util.List;
import java.util.Collections;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.core.aspects.constraints.rules.BaseRule;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.core.aspects.constraints.rules.RuleId;
import jetbrains.mps.core.aspects.constraints.rules.kinds.PredefinedRuleKinds;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SProperty;

public final class Class_ConstraintRules extends BaseRulesConstraintsDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x6069f38ad5c2473eL, 0xbe656672ae45792cL, 0x79555ffcb891b5e6L, "unimodel.structure.Class");

  public static final Rule<ContainmentContext> check_id342464601221104473 = new Rule_Seats_Is_Positive();
  public static final Rule<ContainmentContext> check_id342464601222556525 = new Rule_Blackboard_Positive();
  public static final Rule<ContainmentContext> check_id342464601222565357 = new Rule_Speaker_Positive();

  private static final List<Rule<?>> RULES = Collections.unmodifiableList(Arrays.<Rule<?>>asList(check_id342464601221104473, check_id342464601222556525, check_id342464601222565357));

  @NotNull
  @Override
  public List<Rule<?>> getDeclaredRules() {
    return RULES;
  }

  public static final class Rule_Seats_Is_Positive extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:18f26838-7640-4eda-91b6-ad750b54a45f(unimodel.constraints)/342464601221104473");
    public static final RuleId ID_Seats_Is_Positive = new RuleId(342464601221104473L, SOURCE_NODE_REF);

    public Rule_Seats_Is_Positive() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_Seats_Is_Positive, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return SPropertyOperations.getInteger(context.getChildNode(), PROPS.seats$TYDT) > 0;
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }
  }

  public static final class Rule_Blackboard_Positive extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:18f26838-7640-4eda-91b6-ad750b54a45f(unimodel.constraints)/342464601222556525");
    public static final RuleId ID_Blackboard_Positive = new RuleId(342464601222556525L, SOURCE_NODE_REF);

    public Rule_Blackboard_Positive() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_Blackboard_Positive, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return SPropertyOperations.getInteger(context.getChildNode(), PROPS.blackboard$U43g) >= 0;
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }
  }

  public static final class Rule_Speaker_Positive extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:18f26838-7640-4eda-91b6-ad750b54a45f(unimodel.constraints)/342464601222565357");
    public static final RuleId ID_Speaker_Positive = new RuleId(342464601222565357L, SOURCE_NODE_REF);

    public Rule_Speaker_Positive() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_Speaker_Positive, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return SPropertyOperations.getInteger(context.getChildNode(), PROPS.speaker$U4Kj) >= 0;
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }
  }

  /*package*/ Class_ConstraintRules() {
    super(CONCEPT);
  }

  private static final class PROPS {
    /*package*/ static final SProperty seats$TYDT = MetaAdapterFactory.getProperty(0x6069f38ad5c2473eL, 0xbe656672ae45792cL, 0x79555ffcb891b5e6L, 0x79555ffcb891b5e7L, "seats");
    /*package*/ static final SProperty blackboard$U43g = MetaAdapterFactory.getProperty(0x6069f38ad5c2473eL, 0xbe656672ae45792cL, 0x79555ffcb891b5e6L, 0x79555ffcb891b5e9L, "blackboard");
    /*package*/ static final SProperty speaker$U4Kj = MetaAdapterFactory.getProperty(0x6069f38ad5c2473eL, 0xbe656672ae45792cL, 0x79555ffcb891b5e6L, 0x79555ffcb891b5ecL, "speaker");
  }
}
